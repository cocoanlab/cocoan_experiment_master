function [run_num, trial_num, runstart, trial_start, rating_types] = parse_trial_sequence(trial_sequence, start_line)

% PARSING TRIAL SEQUENCE: each trial info
% [run_num, trial_num, runstart, trial_start, rating_types] = parse_trial_sequence(trial_sequence, start_line)
%
% e.g.) trial_sequence{1}{1} = {'PP' (stimulus type), 'LV1' (levels), '0010' (duration), ...
%                               {'cont_avoidance', 'overall_avoidance', 'overall_aversive_ornot'}(rating types), ...
%                               '0'(cue duration), '3' (pre-rating jitter), '7' (ITI jitter)};
%       
%         'cont_int': continuous intensity rating
%         'cont_avoidance': continuous rating
%         'overall_int': overall intensity rating 
%         'overall_pleasant': overall intensity rating 
%         'overall_avoidance': overall avoidance rating 
%         'overall_aversive_ornot'
%         'overall_pain_ornot'

run_num = numel(trial_sequence);
idx = zeros(run_num+1,1); % index to calculate trial_start
trial_num = zeros(run_num,1);
trial_start = ones(run_num,1);

% ********** IMPORTANT NOTE **********
% YOU CAN ADD TYPES AND PROMPTS HERE. "cont_" AND "overall_" ARE IMPORTANT.
% * CRUCIAL: THE ORDER BETWEEN alltypes AND prompts SHOULD BE THE SAME.*
rating_types.alltypes = ...
    {'cont_int', ...
    'cont_avoidance', ...
    'cont_avoidance_exp', ...
    'overall_int', ...
    'overall_avoidance', ...
    'overall_unpleasant', ...
    'overall_aversive_ornot', ...
    'overall_pain_ornot', ...
    'overall_boredness', ...
    'overall_alertness', ...
    'overall_relaxed',...
    'overall_attention',...
    'overall_resting_positive', ...
    'overall_resting_negative', ...
    'overall_resting_myself', ...
    'overall_resting_others', ...
    'overall_resting_imagery', ...
    'overall_resting_present', ...
    'overall_resting_past', ...
    'overall_resting_future', ...
    'overall_resting_bitter_int', ...
    'overall_resting_bitter_unp', ...
    'overall_resting_capsai_int', ...
    'overall_resting_capsai_unp', ...
    'overall_thermal_int', ...
    'overall_thermal_unp', ...
    'overall_pressure_int', ...
    'overall_pressure_unp', ...
    'overall_negvis_int', ...
    'overall_negvis_unp', ...
    'overall_negaud_int', ...
    'overall_negaud_unp', ...
    'overall_posvis_int', ...
    'overall_posvis_ple',...
    'overall_mood', ...
    'overall_comfortness', ...
    'overall_avoidance_semicircular'
    };
rating_types.prompts = ...
    {'Please rate pain intensity CONTINUOUSLY.', ...
    'Please rate HOW MUCH you want to avoid this stimuli in the future CONTINUOUSLY.', ...
    'Please rate HOW MUCH you want to avoid this stimuli in the future CONTINUOUSLY.', ...
    'HOW MUCH pressure was applied?', ...
    'Please rate HOW MUCH you want to avoid this experience in the future?', ...
    'Please rate the overall unpleasantness you experienced.', ...
    'Was it aversive?',...
    'Was it painful?', ...
    'During the last scan how bored were you?', ...
    'During the last scan how sleepy vs. alert were you?', ...
    'How relaxed are you feeling right now?',...
    'How well could you keep your attention on the task during the last scan?',...
    'The thoughts I experienced during the last scan were POSITIVE.', ...
    'The thoughts I experienced during the last scan were NEGATIVE.', ...
    {'The thoughts I experienced during the last scan', 'were related to myself.'}, ...
    {'The thoughts I experienced during the last scan', 'involved, or concerned, other people.'}, ...
    {'The thoughts I experienced during the last scan', 'were experienced with clear and vivid mental imagery.'},...
    {'The thoughts I experienced during the last scan', 'pertained to the immediate PRESENT (the here and now).'},...
    {'The thoughts I experienced during the last scan', 'pertained to the PAST.'},...
    {'The thoughts I experienced during the last scan', 'pertained to the FUTURE.'},...
    {'At its WORST,', 'HOW INTENSE was the bitter taste you experienced?'}, ...
    {'At its WORST,', 'HOW UNPLEASANT was the burning sensation you experienced?'}, ...
    {'At its WORST,', 'HOW INTENSE was the bitter taste you experienced?'}, ...
    {'At its WORST,', 'HOW UNPLEASANT was the burning sensation you experienced?'}, ...
    'HOW INTENSE was the WORST heat you experienced during the last scan?', ...
    'HOW UNPLEASANT was the WORST heat you experienced during the last scan?', ...
    'HOW INTENSE was the WORST pressure you experienced during the last scan?', ...
    'HOW UNPLEASANT was the WORST pressure you experienced during the last scan?', ...
    'HOW INTENSE was the WORST picture you experienced during the last scan?', ...
    'HOW UNPLEASANT was the WORST picture you experienced during the last scan?', ...
    'HOW INTENSE was the WORST sound you experienced during the last scan?', ...
    'HOW UNPLEASANT was the WORST sound you experienced during the last scan?', ...
    'HOW INTENSE was the BEST picture you viewed during the last scan?', ...
    'HOW PLEASANT was the BEST picture you viewed during the last scan?',...
    'During the last scan, how was your mood?', ...
    'How comfortable are you right now?',...
    '얼마나 피하고 싶은가요?'
    };

for i = 1:run_num
    trial_num(i,1) = numel(trial_sequence{i});
    idx(i+1) = idx(i) + trial_num(i);
    
    if idx(i) < start_line && idx(i+1) >= start_line
        runstart = i;
        trial_start(i,1) = start_line - idx(i);
    end
    
    for j = 1:trial_num(i)
        % (4) rating type1, continuous, overall_int, overall_pleasant, or all
        for ii = 1:numel(rating_types.alltypes)
            rating_types.docont{i}{j} = trial_sequence{i}{j}{4}(strncmp(trial_sequence{i}{j}{4}, 'cont_', 5)); % first, need to know continuous or not? 
            rating_types.dooverall{i}{j} = trial_sequence{i}{j}{4}(strncmp(trial_sequence{i}{j}{4}, 'overall_', 8));
        end
    end
end

end